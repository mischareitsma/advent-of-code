	#PACKAGE custom.aoc.utils
	#CLASSDEF public


	// --------------------------------------------------------------------
public static Integer sumIntArray(req void arr(Integer))
	/* DOC ----------------------------------------------------------------
	Sum the entries in an integer array.
	** ENDDOC */

	type Integer sum = 0
	type String idx = arr("").order()

	while idx.isNotNull() {
		set sum = sum + arr(idx)
		set idx = arr(idx).order()
	}

	return sum


	// --------------------------------------------------------------------
public static Integer sumIntList(req List l)
	/* DOC ----------------------------------------------------------------
	Sum the entries of an array of integers.
	** ENDDOC */

	type Integer sum = 0

	type Integer i

	for i = 1:1:l.count() {
		set sum = sum + l.elementAt(i)
	}

	return sum


	// --------------------------------------------------------------------
public static Boolean inRange(req Integer n, req Integer min, req Integer max)
	/* DOC ----------------------------------------------------------------
	Check if number **n** is in the range if ]**min**, **max**[ (inclusive),
	so min <= n <= max.
	** ENDDOC */

	return (n >= min) and (n <= max)


	// --------------------------------------------------------------------
public static Integer maxIntList(req List l)
	/* DOC ----------------------------------------------------------------
	Return the biggest number from a list of integers.
	** ENDDOC */

	type Integer max = -999999999999999999
	type Integer i

	for i = 1:1:l.count() {
		if l.elementAt(i) > max set max = l.elementAt(i)
	}
	
	return max
